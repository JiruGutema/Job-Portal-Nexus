openapi: 3.0.0
info:
  title: Job Portal API
  version: 1.0.0
  description: API documentation for Job Portal project

servers:
  - url: http://localhost:7777/api

paths:
  /auth/register:
    post:
      summary: User registration
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                password:
                  type: string
                role:
                  type: string
      responses:
        "201":
          description: User registered successfully
        "400":
          description: Bad request

  /auth/login:
    post:
      summary: User login
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        "200":
          description: Successful login
        "401":
          description: Unauthorized

  /profile:
    get:
      summary: Get logged-in user's profile (auto-detects role)
      description: |
        Returns the authenticated user's profile. The response contains a "role" ("seeker" or "employer") and a role-specific "profile" object.
        - If role is "seeker", profile contains: skills (array), education, experience, resume_url.
        - If role is "employer", profile contains: company_name, description, industry, logo_url.
        No request body is required. Authorization: supply a Bearer JWT in the Authorization header.
      tags:
        - Profile
      security:
        - bearerAuth: []
      responses:
        "200":
          description: The authenticated user's profile (role and profile object)
          content:
            application/json:
              schema:
                type: object
                properties:
                  role:
                    type: string
                  profile:
                    oneOf:
                      - type: object
                        properties:
                          id:
                            type: integer
                          user_id:
                            type: integer
                          skills:
                            type: array
                            items:
                              type: string
                          education:
                            type: string
                          experience:
                            type: string
                          resume_url:
                            type: string
                          created_at:
                            type: string
                            format: date-time
                          updated_at:
                            type: string
                            format: date-time
                      - type: object
                        properties:
                          id:
                            type: integer
                          user_id:
                            type: integer
                          company_name:
                            type: string
                          description:
                            type: string
                          industry:
                            type: string
                          logo_url:
                            type: string
                          created_at:
                            type: string
                            format: date-time
                          updated_at:
                            type: string
                            format: date-time
                      - type: object
                        properties:
                          id:
                            type: integer
                          name:
                            type: string
                          email:
                            type: string
                          role:
                            type: string
                          created_at:
                            type: string
                            format: date-time
        "401":
          description: Unauthorized

  /profile/seeker:
    put:
      summary: Update seeker profile
      tags:
        - Profile
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: At least one field must be present to update the seeker profile
              minProperties: 1
              properties:
                skills:
                  type: array
                  items:
                    type: string
                education:
                  type: string
                experience:
                  type: string
                resume_url:
                  type: string
      responses:
        "200":
          description: Updated seeker profile
          content:
            application/json:
              schema:
                type: object
                properties:
                  profile:
                    type: object
                    properties:
                      id:
                        type: integer
                      user_id:
                        type: integer
                      skills:
                        type: array
                        items:
                          type: string
                      education:
                        type: string
                      experience:
                        type: string
                      resume_url:
                        type: string
                      created_at:
                        type: string
                        format: date-time
                      updated_at:
                        type: string
                        format: date-time
        "401":
          description: Unauthorized
        "403":
          description: Forbidden (not a seeker)

  /profile/employer:
    put:
      summary: Update employer profile
      tags:
        - Profile
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: At least one field must be present to update the employer profile. Authorization required.
              minProperties: 1
              properties:
                company_name:
                  type: string
                description:
                  type: string
                industry:
                  type: string
                  description: Industry sector for the employer/company (e.g. "Software", "Healthcare").
                logo_url:
                  type: string
      responses:
        "200":
          description: Updated employer profile
          content:
            application/json:
              schema:
                type: object
                properties:
                  profile:
                    type: object
                    properties:
                      id:
                        type: integer
                      user_id:
                        type: integer
                      company_name:
                        type: string
                      description:
                        type: string
                      industry:
                        type: string
                      logo_url:
                        type: string
                      created_at:
                        type: string
                        format: date-time
                      updated_at:
                        type: string
                        format: date-time
        "401":
          description: Unauthorized
        "403":
          description: Forbidden (not an employer)

  /profile/{id}:
    get:
      summary: View public profile by user id (auto-detects role)
      tags:
        - Profile
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Public profile (role + profile)
          content:
            application/json:
              schema:
                type: object
                properties:
                  role:
                    type: string
                  profile:
                    oneOf:
                      - type: object
                        properties:
                          id:
                            type: integer
                          user_id:
                            type: integer
                          skills:
                            type: array
                            items:
                              type: string
                          education:
                            type: string
                          experience:
                            type: string
                          resume_url:
                            type: string
                          created_at:
                            type: string
                            format: date-time
                          updated_at:
                            type: string
                            format: date-time
                      - type: object
                        properties:
                          id:
                            type: integer
                          user_id:
                            type: integer
                          company_name:
                            type: string
                          description:
                            type: string
                          logo_url:
                            type: string
                          created_at:
                            type: string
                            format: date-time
                          updated_at:
                            type: string
                            format: date-time
                      - type: object
                        properties:
                          id:
                            type: integer
                          name:
                            type: string
                          email:
                            type: string
                          role:
                            type: string
                          created_at:
                            type: string
                            format: date-time
        "404":
          description: Profile not found

  /jobs:
    get:
      summary: Get all jobs with filters
      tags:
        - Jobs
      parameters:
        - name: search
          in: query
          schema:
            type: string
        - name: location
          in: query
          schema:
            type: string
        - name: job_type
          in: query
          schema:
            type: string
            enum: [full-time, part-time, contract, internship]
        - name: page
          in: query
          schema:
            type: integer
        - name: limit
          in: query
          schema:
            type: integer
      responses:
        "200":
          description: Jobs retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Job'
                  count:
                    type: integer
        "500":
          description: Server error

    post:
      summary: Create new job (Employer only)
      tags:
        - Jobs
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - title
                - description
              properties:
                title:
                  type: string
                description:
                  type: string
                requirements:
                  type: string
                location:
                  type: string
                salary_range:
                  type: string
                job_type:
                  type: string
                  enum: [full-time, part-time, contract, internship]
      responses:
        "201":
          description: Job created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  data:
                    $ref: '#/components/schemas/Job'
        "400":
          description: Validation error
        "403":
          description: Forbidden (not employer)
        "500":
          description: Server error

  /jobs/{id}:
    get:
      summary: Get job by ID
      tags:
        - Jobs
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Job retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    $ref: '#/components/schemas/Job'
        "404":
          description: Job not found
        "500":
          description: Server error

    put:
      summary: Update job (Owner only)
      tags:
        - Jobs
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                description:
                  type: string
                requirements:
                  type: string
                location:
                  type: string
                salary_range:
                  type: string
                job_type:
                  type: string
                  enum: [full-time, part-time, contract, internship]
      responses:
        "200":
          description: Job updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  data:
                    $ref: '#/components/schemas/Job'
        "400":
          description: Validation error
        "403":
          description: Forbidden (not owner)
        "404":
          description: Job not found
        "500":
          description: Server error

    delete:
      summary: Delete job (Owner only)
      tags:
        - Jobs
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Job deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
        "403":
          description: Forbidden (not owner)
        "404":
          description: Job not found
        "500":
          description: Server error

  /employer/jobs:
    get:
      summary: Get employer's jobs
      tags:
        - Jobs
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Employer jobs retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Job'
                  count:
                    type: integer
        "403":
          description: Forbidden (not employer)
        "500":
          description: Server error

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  